//
//  Characteristic.swift
//  SwiftHK
//
//  Created by Lawrence Bensaid on 26/08/2021.
//

import Foundation

public class Characteristic {
    
    public enum Category: String {
        
        // MARK: - Topics: HomeKit standard
        
        // MARK: Light
        
        /// The current light level.
        case currentLightLevel = "0000006B-0000-1000-8000-0026BB765291"
        /// The hue of the color used by a light.
        case hue = "00000013-0000-1000-8000-0026BB765291"
        /// The brightness of a light.
        case brightness = "00000008-0000-1000-8000-0026BB765291"
        /// The saturation of the color used by a light.
        case saturation = "0000002F-0000-1000-8000-0026BB765291"
        /// The color temperature of a light.
        case colorTemperature = "000000CE-0000-1000-8000-0026BB765291"
        
        // MARK: Power and switches
        
        /// The battery level of the accessory.
        case batteryLevel = "00000068-0000-1000-8000-0026BB765291"
        /// The charging state of a battery.
        case chargingState = "0000008F-0000-1000-8000-0026BB765291"
        /// The state of a contact sensor.
        case contactState = "0000006A-0000-1000-8000-0026BB765291"
        /// The state of an outlet.
        case outletInUse = "00000026-0000-1000-8000-0026BB765291"
        /// The power state of the accessory.
        case powerState = "00000025-0000-1000-8000-0026BB765291"
        /// A low battery indicator.
        case statusLowBattery = "00000079-0000-1000-8000-0026BB765291"
        /// The output state of a programmable switch.
        case outputState = "00000074-0000-1000-8000-0026BB765291"
        /// The input event of a programmable switch.
        case inputEvent = "00000073-0000-1000-8000-0026BB765291"
        
        // MARK: Other
        
        case targetRelativeHumidity = "00000034-0000-1000-8000-0026BB765291"
        case logs = "0000001F-0000-1000-8000-0026BB765291"
        case audioFeedback = "00000005-0000-1000-8000-0026BB765291"
        case adminOnlyAccess = "00000001-0000-1000-8000-0026BB765291"
        case securitySystemAlarmType = "0000008E-0000-1000-8000-0026BB765291"
        case motionDetected = "00000022-0000-1000-8000-0026BB765291"
        case lockMechanismLastKnownAction = "0000001C-0000-1000-8000-0026BB765291"
        case lockManagementControlPoint = "00000019-0000-1000-8000-0026BB765291"
        case lockManagementAutoSecureTimeout = "0000001A-0000-1000-8000-0026BB765291"
        case airParticulateDensity = "00000064-0000-1000-8000-0026BB765291"
        case airParticulateSize = "00000065-0000-1000-8000-0026BB765291"
        case airQuality = "00000095-0000-1000-8000-0026BB765291"
        case carbonDioxideDetected = "00000092-0000-1000-8000-0026BB765291"
        case carbonDioxideLevel = "00000093-0000-1000-8000-0026BB765291"
        case carbonDioxidePeakLevel = "00000094-0000-1000-8000-0026BB765291"
        case carbonMonoxideDetected = "00000069-0000-1000-8000-0026BB765291"
        case carbonMonoxideLevel = "00000090-0000-1000-8000-0026BB765291"
        case carbonMonoxidePeakLevel = "00000091-0000-1000-8000-0026BB765291"
        case currentHorizontalTilt = "0000006C-0000-1000-8000-0026BB765291"
        case currentPosition = "0000006D-0000-1000-8000-0026BB765291"
        case currentSecuritySystemState = "00000066-0000-1000-8000-0026BB765291"
        case currentVerticalTilt = "0000006E-0000-1000-8000-0026BB765291"
        case holdPosition = "0000006F-0000-1000-8000-0026BB765291"
        case leakDetected = "00000070-0000-1000-8000-0026BB765291"
        case occupancyDetected = "00000071-0000-1000-8000-0026BB765291"
        case positionState = "00000072-0000-1000-8000-0026BB765291"
        case statusActive = "00000075-0000-1000-8000-0026BB765291"
        case statusFault = "00000077-0000-1000-8000-0026BB765291"
        case statusJammed = "00000078-0000-1000-8000-0026BB765291"
        case statusTampered = "0000007A-0000-1000-8000-0026BB765291"
        case targetHorizontalTilt = "0000007B-0000-1000-8000-0026BB765291"
        case targetSecuritySystemState = "00000067-0000-1000-8000-0026BB765291"
        case targetPosition = "0000007C-0000-1000-8000-0026BB765291"
        case targetVerticalTilt = "0000007D-0000-1000-8000-0026BB765291"
        case streamingStatus = "00000120-0000-1000-8000-0026BB765291"
        case setupStreamEndpoint = "00000118-0000-1000-8000-0026BB765291"
        case supportedVideoStreamConfiguration = "00000114-0000-1000-8000-0026BB765291"
        case supportedRTPConfiguration = "00000116-0000-1000-8000-0026BB765291"
        case selectedStreamConfiguration = "00000117-0000-1000-8000-0026BB765291"
        case opticalZoom = "0000011C-0000-1000-8000-0026BB765291"
        case digitalZoom = "0000011D-0000-1000-8000-0026BB765291"
        case imageRotation = "0000011E-0000-1000-8000-0026BB765291"
        case imageMirroring = "0000011F-0000-1000-8000-0026BB765291"
        case labelNamespace = "000000CD-0000-1000-8000-0026BB765291"
        case labelIndex = "000000CB-0000-1000-8000-0026BB765291"
        case currentAirPurifierState = "000000A9-0000-1000-8000-0026BB765291"
        case targetAirPurifierState = "000000A8-0000-1000-8000-0026BB765291"
        case currentSlatState = "000000AA-0000-1000-8000-0026BB765291"
        case filterChangeIndication = "000000AC-0000-1000-8000-0026BB765291"
        case filterLifeLevel = "000000AB-0000-1000-8000-0026BB765291"
        case filterResetChangeIndication = "000000AD-0000-1000-8000-0026BB765291"
        case slatType = "000000C0-0000-1000-8000-0026BB765291"
        case currentTilt = "000000C1-0000-1000-8000-0026BB765291"
        case targetTilt = "000000C2-0000-1000-8000-0026BB765291"
        case ozoneDensity = "000000C3-0000-1000-8000-0026BB765291"
        case nitrogenDioxideDensity = "000000C4-0000-1000-8000-0026BB765291"
        case sulphurDioxideDensity = "000000C5-0000-1000-8000-0026BB765291"
        case pm2_5Density = "000000C6-0000-1000-8000-0026BB765291"
        case pm10Density = "000000C7-0000-1000-8000-0026BB765291"
        case volatileOrganicCompoundDensity = "000000C8-0000-1000-8000-0026BB765291"
        case programMode = "000000D1-0000-1000-8000-0026BB765291"
        case inUse = "000000D2-0000-1000-8000-0026BB765291"
        case setDuration = "000000D3-0000-1000-8000-0026BB765291"
        case remainingDuration = "000000D4-0000-1000-8000-0026BB765291"
        case valveType = "000000D5-0000-1000-8000-0026BB765291"
        
        case coolingThreshold = "0000000D-0000-1000-8000-0026BB765291"
        case currentDoorState = "0000000E-0000-1000-8000-0026BB765291"
        case currentHeatingCooling = "0000000F-0000-1000-8000-0026BB765291"
        case currentRelativeHumidity = "00000010-0000-1000-8000-0026BB765291"
        case currentTemperature = "00000011-0000-1000-8000-0026BB765291"
        case heatingThreshold = "00000012-0000-1000-8000-0026BB765291"
        case identify = "00000014-0000-1000-8000-0026BB765291"
        case currentLockMechanismState = "0000001D-0000-1000-8000-0026BB765291"
        case targetLockMechanismState = "0000001E-0000-1000-8000-0026BB765291"
        case manufacturer = "00000020-0000-1000-8000-0026BB765291"
        case model = "00000021-0000-1000-8000-0026BB765291"
        case name = "00000023-0000-1000-8000-0026BB765291"
        case obstructionDetected = "00000024-0000-1000-8000-0026BB765291"
        case rotationDirection = "00000028-0000-1000-8000-0026BB765291"
        case rotationSpeed = "00000029-0000-1000-8000-0026BB765291"
        case serialNumber = "00000030-0000-1000-8000-0026BB765291"
        case targetDoorState = "00000032-0000-1000-8000-0026BB765291"
        case targetHeatingCooling = "00000033-0000-1000-8000-0026BB765291"
        case targetTemperature = "00000035-0000-1000-8000-0026BB765291"
        case temperatureUnits = "00000036-0000-1000-8000-0026BB765291"
        case version = "00000037-0000-1000-8000-0026BB765291"
        case firmwareVersion = "00000052-0000-1000-8000-0026BB765291"
        case hardwareVersion = "00000053-0000-1000-8000-0026BB765291"
        case softwareVersion = "00000054-0000-1000-8000-0026BB765291"
        case smokeDetected = "00000076-0000-1000-8000-0026BB765291"
        case lockPhysicalControls = "000000A7-0000-1000-8000-0026BB765291"
        case currentFanState = "000000AF-0000-1000-8000-0026BB765291"
        case active = "000000B0-0000-1000-8000-0026BB765291"
        case currentHeaterCoolerState = "000000B1-0000-1000-8000-0026BB765291"
        case targetHeaterCoolerState = "000000B2-0000-1000-8000-0026BB765291"
        case currentHumidifierDehumidifierState = "000000B3-0000-1000-8000-0026BB765291"
        case targetHumidifierDehumidifierState = "000000B4-0000-1000-8000-0026BB765291"
        case waterLevel = "000000B5-0000-1000-8000-0026BB765291"
        case swingMode = "000000B6-0000-1000-8000-0026BB765291"
        case targetFanState = "000000BF-0000-1000-8000-0026BB765291"
        case dehumidifierThreshold = "000000C9-0000-1000-8000-0026BB765291"
        case humidifierThreshold = "000000CA-0000-1000-8000-0026BB765291"
        case isConfigured = "000000D6-0000-1000-8000-0026BB765291"
        case supportedAudioStreamConfiguration = "00000115-0000-1000-8000-0026BB765291"
        case volume = "00000119-0000-1000-8000-0026BB765291"
        case mute = "0000011A-0000-1000-8000-0026BB765291"
        case nightVision = "0000011B-0000-1000-8000-0026BB765291"
        
        // MARK: - Topics: Eve Energy
        
        /// Total consumption in kWh of Eve device.
        case eveTotalConsumption = "E863F10C-079E-48FF-8F27-9C2605A29F52"
        /// Consumption in W (Watts) of Eve device.
        case eveConsumption = "E863F10D-079E-48FF-8F27-9C2605A29F52"
        /// Curent in A (Amps) of Eve device.
        case eveCurrent = "E863F126-079E-48FF-8F27-9C2605A29F52"
        /// Voltage in V (Volts) of Eve device.
        case eveVoltage = "E863F10A-079E-48FF-8F27-9C2605A29F52"
        /// Config data of Eve device.
        case eveConfigWrite = "E863F11D-079E-48FF-8F27-9C2605A29F52"
        case eveConfigRead = "E863F131-079E-48FF-8F27-9C2605A29F52"
        /// ? Logs of Eve device.
        case eveLogs = "E863F116-079E-48FF-8F27-9C2605A29F52"
        /// ? Logs of Eve device.
        case eveLogs2 = "E863F11C-079E-48FF-8F27-9C2605A29F52"
        
        // MARK: -
    
        public func description() -> String {
            switch self {
            case .targetRelativeHumidity: return "targetRelativeHumidity"
            case .outletInUse: return "outletInUse"
            case .logs: return "logs"
            case .audioFeedback: return "audioFeedback"
            case .adminOnlyAccess: return "adminOnlyAccess"
            case .securitySystemAlarmType: return "securitySystemAlarmType"
            case .motionDetected: return "motionDetected"
            case .lockMechanismLastKnownAction: return "lockMechanismLastKnownAction"
            case .lockManagementControlPoint: return "lockManagementControlPoint"
            case .lockManagementAutoSecureTimeout: return "lockManagementAutoSecureTimeout"
            case .airParticulateDensity: return "airParticulateDensity"
            case .airParticulateSize: return "airParticulateSize"
            case .airQuality: return "airQuality"
            case .carbonDioxideDetected: return "carbonDioxideDetected"
            case .carbonDioxideLevel: return "carbonDioxideLevel"
            case .carbonDioxidePeakLevel: return "carbonDioxidePeakLevel"
            case .carbonMonoxideDetected: return "carbonMonoxideDetected"
            case .carbonMonoxideLevel: return "carbonMonoxideLevel"
            case .carbonMonoxidePeakLevel: return "carbonMonoxidePeakLevel"
            case .contactState: return "contactState"
            case .currentHorizontalTilt: return "currentHorizontalTilt"
            case .currentPosition: return "currentPosition"
            case .currentSecuritySystemState: return "currentSecuritySystemState"
            case .currentVerticalTilt: return "currentVerticalTilt"
            case .holdPosition: return "holdPosition"
            case .leakDetected: return "leakDetected"
            case .occupancyDetected: return "OccupancyDetected"
            case .outputState: return "OutputState"
            case .positionState: return "PositionState"
            case .statusActive: return "StatusActive"
            case .statusFault: return "StatusFault"
            case .statusJammed: return "StatusJammed"
            case .statusTampered: return "StatusTampered"
            case .targetHorizontalTilt: return "TargetHorizontalTilt"
            case .targetSecuritySystemState: return "TargetSecuritySystemState"
            case .targetPosition: return "TargetPosition"
            case .targetVerticalTilt: return "TargetVerticalTilt"
            case .streamingStatus: return "StreamingStatus"
            case .setupStreamEndpoint: return "SetupStreamEndpoint"
            case .supportedVideoStreamConfiguration: return "SupportedVideoStreamConfiguration"
            case .supportedRTPConfiguration: return "SupportedRTPConfiguration"
            case .selectedStreamConfiguration: return "SelectedStreamConfiguration"
            case .opticalZoom: return "OpticalZoom"
            case .digitalZoom: return "DigitalZoom"
            case .imageRotation: return "ImageRotation"
            case .imageMirroring: return "ImageMirroring"
            case .labelNamespace: return "LabelNamespace"
            case .labelIndex: return "LabelIndex"
            case .currentAirPurifierState: return "CurrentAirPurifierState"
            case .targetAirPurifierState: return "TargetAirPurifierState"
            case .currentSlatState: return "CurrentSlatState"
            case .filterChangeIndication: return "FilterChangeIndication"
            case .filterLifeLevel: return "FilterLifeLevel"
            case .filterResetChangeIndication: return "FilterResetChangeIndication"
            case .slatType: return "SlatType"
            case .currentTilt: return "CurrentTilt"
            case .targetTilt: return "TargetTilt"
            case .ozoneDensity: return "OzoneDensity"
            case .nitrogenDioxideDensity: return "NitrogenDioxideDensity"
            case .sulphurDioxideDensity: return "SulphurDioxideDensity"
            case .pm2_5Density: return "PM2_5Density"
            case .pm10Density: return "PM10Density"
            case .volatileOrganicCompoundDensity: return "VolatileOrganicCompoundDensity"
            case .programMode: return "ProgramMode"
            case .inUse: return "InUse"
            case .setDuration: return "SetDuration"
            case .remainingDuration: return "RemainingDuration"
            case .valveType: return "ValveType"
            case .brightness: return "Brightness"
            case .coolingThreshold: return "CoolingThreshold"
            case .currentDoorState: return "CurrentDoorState"
            case .currentHeatingCooling: return "CurrentHeatingCooling"
            case .currentRelativeHumidity: return "CurrentRelativeHumidity"
            case .currentTemperature: return "CurrentTemperature"
            case .heatingThreshold: return "HeatingThreshold"
            case .hue: return "Hue"
            case .identify: return "Identify"
            case .currentLockMechanismState: return "CurrentLockMechanismState"
            case .targetLockMechanismState: return "TargetLockMechanismState"
            case .manufacturer: return "Manufacturer"
            case .model: return "Model"
            case .name: return "Name"
            case .obstructionDetected: return "ObstructionDetected"
            case .powerState: return "PowerState"
            case .rotationDirection: return "RotationDirection"
            case .rotationSpeed: return "RotationSpeed"
            case .saturation: return "Saturation"
            case .serialNumber: return "SerialNumber"
            case .targetDoorState: return "TargetDoorState"
            case .targetHeatingCooling: return "TargetHeatingCooling"
            case .targetTemperature: return "TargetTemperature"
            case .temperatureUnits: return "TemperatureUnits"
            case .version: return "Version"
            case .firmwareVersion: return "FirmwareVersion"
            case .hardwareVersion: return "HardwareVersion"
            case .softwareVersion: return "SoftwareVersion"
            case .batteryLevel: return "BatteryLevel"
            case .currentLightLevel: return "CurrentLightLevel"
            case .inputEvent: return "InputEvent"
            case .smokeDetected: return "SmokeDetected"
            case .statusLowBattery: return "StatusLowBattery"
            case .chargingState: return "ChargingState"
            case .lockPhysicalControls: return "LockPhysicalControls"
            case .currentFanState: return "CurrentFanState"
            case .active: return "Active"
            case .currentHeaterCoolerState: return "CurrentHeaterCoolerState"
            case .targetHeaterCoolerState: return "TargetHeaterCoolerState"
            case .currentHumidifierDehumidifierState: return "CurrentHumidifierDehumidifierState"
            case .targetHumidifierDehumidifierState: return "TargetHumidifierDehumidifierState"
            case .waterLevel: return "WaterLevel"
            case .swingMode: return "SwingMode"
            case .targetFanState: return "TargetFanState"
            case .dehumidifierThreshold: return "DehumidifierThreshold"
            case .humidifierThreshold: return "HumidifierThreshold"
            case .colorTemperature: return "ColorTemperature"
            case .isConfigured: return "IsConfigured"
            case .supportedAudioStreamConfiguration: return "SupportedAudioStreamConfiguration"
            case .volume: return "Volume"
            case .mute: return "Mute"
            case .nightVision: return "NightVision"
                
            case .eveTotalConsumption: return "EveTotalConsumption"
            case .eveConsumption: return "EveConsumption"
            case .eveCurrent: return "EveCurrent"
            case .eveVoltage: return "EveVoltage"
            case .eveConfigWrite: return "EveConfigWrite"
            case .eveConfigRead: return "EveConfigRead"
            case .eveLogs: return "EveLogs"
            case .eveLogs2: return "EveLogs2"
            }
        }
        
    }
    
}
